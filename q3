// Create a matrix of size nxm using dynamic memory allocation  technique, store data in the matrix and then find max element of each row
#include <stdio.h>
#include <stdlib.h>

int main() {
    int **matrix, n, m;

    // Input matrix dimensions
    printf("Enter number of rows (n): ");
    scanf("%d", &n);
    printf("Enter number of columns (m): ");
    scanf("%d", &m);

    // Dynamically allocate memory for matrix
    matrix = (int **)malloc(n * sizeof(int *));
    for (int i = 0; i < n; i++)
        matrix[i] = (int *)malloc(m * sizeof(int));

    // Input matrix elements
    printf("Enter matrix elements:\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            scanf("%d", &matrix[i][j]);

    // Find and print the maximum element in each row
    for (int i = 0; i < n; i++) {
        int max = matrix[i][0];
        for (int j = 1; j < m; j++)
            if (matrix[i][j] > max) max = matrix[i][j];
        printf("Max in row %d: %d\n", i, max);
    }

    // Free allocated memory
    for (int i = 0; i < n; i++) free(matrix[i]);
    free(matrix);

    return 0;
}
