// C Program to implement min/max heap operation using complete binary tree. Using array data strcto implement min/max heap. Then sort a given set of elements using heap sort technique.

#include<stdio.h>
#include<stdlib.h>

void print(int a[], int n) {
    for(int i = 0;i < n;i++) {
        printf("%d ",a[i]);
    }
    printf("\n");
}

void heapify(int a[], int n, int i) {
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;
    
    if(left < n && a[left] > a[largest]) {
        largest = left;
    }
    
    if(right < n && a[right] > a[largest]) {
        largest = right;
    }
    
    if(largest != i) {
        int temp = a[i];
        a[i] = a[largest];
        a[largest] = temp;
        heapify(a,n,largest);
    }
}

void heapsort(int a[], int n) {
    for(int i = (n / 2) - 1;i >= 0;i--) {
        heapify(a,n,i);
    }
    
    for(int i = n - 1;i >= 0;i--) {
        int temp = a[i];
        a[i] = a[0];
        a[0] = temp;
        heapify(a,i,0);
    }
}

int main() {
    int a[10] = {78,4,67,7,9,3,5,63,98,18};
    int n = sizeof(a) / sizeof(a[0]);
    
    printf("Unsorted Array:\n");
    print(a,n);
    
    heapsort(a,n);
    
    printf("Sorted Array:\n");
    print(a,n);
    return 0;
}

/* OUTPUT
Unsorted Array:
78 4 67 7 9 3 5 63 98 18 
Sorted Array:
3 4 5 7 9 18 63 67 78 98 
*/
