// Implement the Heap Sort algorithm in C and store the original and sorted arrays in a text file. The program should generate a random array of integers, sort it using Heap Sort, and print both the original and sorted arrays to the console as well as save them to a file. The program should also allow the user to input the size of the array.

//heap sort
#include <stdio.h>
#include <stdlib.h>
#include<time.h>

// Function to heapify a subtree rooted at node i
void heapify(int arr[], int n, int i) {
    int largest = i;       // Initialize largest as root
    int left = 2 * i + 1;  // Left child index
    int right = 2 * i + 2; // Right child index

    // If left child is larger than root
    if (left < n && arr[left] > arr[largest]) {
        largest = left;
    }

    // If right child is larger than the largest so far
    if (right < n && arr[right] > arr[largest]) {
        largest = right;
    }

    // If largest is not root, swap and continue heapifying
    if (largest != i) {
        int temp = arr[i];
        arr[i] = arr[largest];
        arr[largest] = temp;

        // Recursively heapify the affected subtree
        heapify(arr, n, largest);
    }
}

// Function to perform Heap Sort
void heapSort(int arr[], int n) {
    // Build max heap (rearrange array)
    for (int i = n / 2 - 1; i >= 0; i--) {
        heapify(arr, n, i);
    }

    // Extract elements from heap one by one
    for (int i = n - 1; i > 0; i--) {
        // Swap root with last element
        int temp = arr[0];
        arr[0] = arr[i];
        arr[i] = temp;

        // Heapify reduced heap
        heapify(arr, i, 0);
    }
}

// Function to print an array
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

//storing the value in text file 
void printText(int arr[] , int n){
    FILE *f;
    f = fopen("heap.txt", "a");
    fprintf(f,"Sorted array : \n");
    for(int i = 0 ; i<n ;i++){
        fprintf(f,"%d\n",arr[i]);
    } //fprintf(f,"\n");
    fclose(f);
}

// Main function
int main() {
    FILE *f;
    srand(time(0));
    f = fopen("heap.txt", "w");
    int n ,a = 0 , b =10 ;
    int min = 0 , max = 100;
    printf("Enter the size of the array: ");
    n = a+rand() % (b-a)+1;
    printf("Size of the array is %d\n",n);
    int arr[n];
    fprintf(f,"Original array : \n");
    for(int i =0 ; i < n ;i++){
        arr[i] = min + rand() % (max - min + 1);
        fprintf(f,"%d\n",arr[i]);
    }
    fclose(f);
    printf("Original array: ");
    printArray(arr, n);

    heapSort(arr, n);

    printf("Sorted array: ");
    printArray(arr, n);
    printText(arr,n);

    return 0;
}

/* OUTPUT 
Enter the size of the array: 
Size of the array is 6
Original array:  38 63 27 94 12 56 
Sorted array:  12 27 38 56 63 94 

Original array : 
38
63
27
94
12
56
Sorted array : 
12
27
38
56
63
94
*/
