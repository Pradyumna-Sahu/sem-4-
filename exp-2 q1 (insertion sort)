// Use a random number generator to generate 10 numbers between 20 to 50. USe insertion sort function to sort in non-increasing(decreasing) order and show the partially sorted array for the kth pass. Call the function from main methodand finally show the sorted array

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int print(int a[], int n) {
    for (int i = n - 1; i >= 0; i--) {  
        printf("%d ", a[i]);
    }
    printf("\n");
}

void insertionsort(int a[], int n, int k) {
    int i, j, key;
    for (i = 1; i < n; i++) {
        key = a[i];
        j = i - 1;  
        while (j >= 0 && a[j] < key) {  
            a[j + 1] = a[j];
            j--;
        }
        a[j + 1] = key;

        if (i == k) {  
            printf("Iteration-%d: ", i);
            print(a, n);
        }
    }
    printf("Sorted array:\n");
    print(a, n);
}

int main() {
    srand(time(0));
    int arr[10];
    int k;
    
    for (int i = 0; i < 10; i++) {
        arr[i] = 20 + rand() % 31;  
    }

    printf("Unsorted array:\n");
    print(arr, 10);

    printf("Enter kth pass to show of the partially sorted array: ");
    scanf("%d", &k);

    insertionsort(arr, 10, k);

    return 0;
}

/* OUTPUT
Unsorted array:
31 21 27 24 26 26 24 35 20 32 
Enter kth pass to show of the partially sorted array: 5
Iteration-5: 31 21 27 24 20 24 26 26 32 35 
Sorted array:
20 21 24 24 26 26 27 31 32 35 
*/
